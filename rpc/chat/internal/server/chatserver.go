// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: chat.proto

package server

import (
	"context"

	"AiChatPartner/rpc/chat/chat"
	"AiChatPartner/rpc/chat/internal/logic"
	"AiChatPartner/rpc/chat/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	chat.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServer) Ping(ctx context.Context, in *chat.Request) (*chat.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *ChatServer) Expand(ctx context.Context, in *chat.ExpandReq) (*chat.ExpandResp, error) {
	l := logic.NewExpandLogic(ctx, s.svcCtx)
	return l.Expand(in)
}

func (s *ChatServer) Shorten(ctx context.Context, in *chat.ShortenReq) (*chat.ShortenResp, error) {
	l := logic.NewShortenLogic(ctx, s.svcCtx)
	return l.Shorten(in)
}
