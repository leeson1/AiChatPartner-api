// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: db.proto

package server

import (
	"context"

	"AiChatPartner/rpc/db/db"
	"AiChatPartner/rpc/db/internal/logic/redisservice"
	"AiChatPartner/rpc/db/internal/svc"
)

type RedisServiceServer struct {
	svcCtx *svc.ServiceContext
	db.UnimplementedRedisServiceServer
}

func NewRedisServiceServer(svcCtx *svc.ServiceContext) *RedisServiceServer {
	return &RedisServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *RedisServiceServer) Set(ctx context.Context, in *db.SetRequest) (*db.SetResponse, error) {
	l := redisservicelogic.NewSetLogic(ctx, s.svcCtx)
	return l.Set(in)
}

func (s *RedisServiceServer) Get(ctx context.Context, in *db.GetRequest) (*db.GetResponse, error) {
	l := redisservicelogic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}

func (s *RedisServiceServer) Del(ctx context.Context, in *db.DelRequest) (*db.DelResponse, error) {
	l := redisservicelogic.NewDelLogic(ctx, s.svcCtx)
	return l.Del(in)
}
